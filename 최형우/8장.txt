8장

장치 컨트롤러 : CPU와 입출력장치 간의 통신 중개, 오류 검출, 데이터 버퍼링(전송률의 차이가 있는 장치들 사이에 버퍼를 해결)과 같은 역할
	ㄴ 데이터 레지스터 : 입출력 간의 데이터가 담김. 최근 데이터가 많아져서 레지스터 대신 RAM을 사용하기도함
	ㄴ 상태 레지스터 & 제어 레지스터 : 각각 입출력 작업의 상태정보와 수행할 내용에 대한 제어 정보가 저장

장치 드라이버 : 장치 컨트롤러를 제어하여 입출력장치와 연결하기위한 소프트웨어적 통로



프로그램 입출력 : 프로그램 속 명령어로 입출력 장치 제어
	ㄴ 메모리 맵 입출력 : 주소공간 하나에 메모리와 입출력장치를 위한 공간을 함께 사용하는것, 같은 명령어로 사용 가능
	ㄴ 고립형 입출력 : 분리된 주소공간을 사용하지만, 전용 명령어를 사용해야함
인터럽트 기반 입출력 : 장치 컨트롤러가 요청하는 하드웨어 인터럽트 기반. 우선순위에 따라 인터럽트 처리.
	ㄴ NMI : 무시할 수 없는 인터럽트. 우선순위 최고
	ㄴ 프로그래머블 인터럽트 컨트롤러(PIC) : 인터럽트들의 우선순위를 판별한 후 CPU에 처리할 인터럽트 알려줌
DMA 입출력 : CPU를 거치치 않고 메모리와 입출력장치끼리 작동가능한 방식. DMA컨트롤러가 CPU에게 명령 받은 뒤 자체적으로 작동. 
			단, 시스템 버스를 CPU가 쓰지 않을때만 잠깐씩 가능. 따라서 입출력 버스라는 입출력 장치 전용의 버스가 존재(ex. PCI, PCIe)



9장

메모리 : 커널 영역(운영체제) + 사용자 영역(응용 프로그램) 로 구성

커널 : 운영체제의 핵심 서비스를 담당하는 부분. 운영체제라 하면 이걸 말하는 것.
	ㄴ 사용자 인터페이스(UI) : 커널에 해당 안됨
		ㄴ 그래픽 유저 인터페이스(GUI) : 그래픽을 기반으로 컴퓨터와 상호작용(ex. 바탕화면, 휴대폰)
		ㄴ 커맨드 라인 인터페이스(CLI) : 명령어로 상호작용 (ex. cmd)

이중모드 : 사용자 모드(운영체제 서비스 제공X) + 커널 모드(커널 영역 코드 실행가능)
	- 시스템 호출 : 사용자 모드로 실행되던 프로그램이 필요에 따라 커널 모드로 진입하기 위한 요청


운영체제 핵심 서비스
1) 프로세스 관리 : 한번에 하나씩 실행하는 프로세스 -> 전환 관리
2) 자원 접근 및 할당 : 프로세스에 필요한 자원을 적절히 할당
3) 파일 시스템 관리 : 파일 생성&삭제&실행을 관여하는 파일 시스템 지원


